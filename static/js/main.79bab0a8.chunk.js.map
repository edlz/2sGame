{"version":3,"sources":["actions/constants.js","reducers/score.js","reducers/index.js","store.js","components/Piece/Piece.jsx","components/GameOver/GameOver.jsx","components/PiecesContainer/PiecesContainer.jsx","actions/score.js","components/GameContainer/GameContainer.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_SCORE","RESET_SCORE","initialState","score","best","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Piece","piece","value","className","pos","GameOver","onRestart","onClick","connect","addScore","amount","dispatch","resetScore","useState","gameOver","setGameOver","loading","setLoading","board","setBoard","useEffect","window","addEventListener","event","repeat","doMove","dropPiece","validMove","newBoard","forEach","ele","key","moveUp","moveDown","moveLeft","moveRight","checkGameOver","indexAbove","i","indexes","push","indexBelow","indexRight","lim","Math","floor","indexLeft","spaces","length","r","random","moveSingle","start","destIndexes","spot","combined","every","j","z","SIDE_LENGTH","filter","x","prevCol","prevRow","y","map","e","GameContainer","row","allRows","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAAaA,EAAY,YACZC,EAAc,cCCrBC,EAAe,CACnBC,MAAO,EACPC,KAAM,GCDOC,4BAAgB,CAAEF,MDIlB,WAAyC,IAA/BG,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAC7CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKR,EACH,OAAO,2BAAKM,GAAZ,IAAmBH,MAAOG,EAAMH,MAAQM,IAC1C,KAAKR,EACH,OAAIK,EAAMH,MAAQG,EAAMF,KACf,2BAAKE,GAAZ,IAAmBF,KAAME,EAAMH,MAAOA,MAAO,IAExC,2BAAKG,GAAZ,IAAmBH,MAAO,IAC5B,QACE,OAAOG,MEZPI,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,6BCM1BO,EAdD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,cAAC,WAAD,UACGA,EAAMC,MAAQ,GACb,qBACEC,UAAS,4BAAuBF,EAAMZ,MAA7B,iBAA2CY,EAAMC,MAAjD,gBAA8DD,EAAMG,KAD/E,SAGE,qBAAKD,UAAW,eAAhB,SAAiCF,EAAMC,aCSlCG,G,MAhBE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClB,OACE,sBAAKH,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAf,wBACA,mBACEA,UAAU,YACVI,QAAS,WACPD,KAHJ,4BCoSSE,cAAQ,KAAM,CAAEC,SC1SP,SAACC,GAAD,OAAY,SAACC,GACnCA,EAAS,CAAEpB,KAAMR,EAAWS,QAASkB,MDySEE,WCtSf,kBAAM,SAACD,GAC/BA,EAAS,CAAEpB,KAAMP,ODqSJwB,EAjSS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUG,EAAiB,EAAjBA,WAEnC,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,CACjC,CAAEX,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,GAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,IAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,IAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,IAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,IAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,IAC3B,CAAEF,MAAO,EAAGb,MAAO,EAAGe,IAAK,MAhB7B,mBAAOc,EAAP,KAAcC,EAAd,KAkBAC,qBAAU,WACRC,OAAOC,iBACL,WACA,SAACC,GACMA,EAAMC,QACTC,EAAOF,MAGX,GAEFG,IACAA,MACC,IAEH,IAaMD,EAAS,SAACF,GACd,IAAII,GAAY,EAChB,IAAKX,EAAS,CACZ,IAAMY,EAAQ,YAAOV,GAKrB,OAJAU,EAASC,SAAQ,SAACC,GAAD,OAAUA,EAAIzC,MAAQ,KACvC8B,EAASS,GAETX,GAAW,GACHM,EAAMQ,KACZ,IAAK,IAEHJ,EAAYK,IACZ,MACF,IAAK,IAEHL,EAAYM,IACZ,MACF,IAAK,IAEHN,EAAYO,IACZ,MACF,IAAK,IAEHP,EAAYQ,IAIhB,GAAIR,IACFD,IACIU,KAEF,YADArB,GAAY,GAIhBE,GAAW,KAKToB,EAAa,SAACC,GAClB,IAAMC,EAAU,GAEhB,IADAD,GA5FgB,EA6FTA,GAAK,GACVC,EAAQC,KAAKF,GACbA,GA/Fc,EAiGhB,OAAOC,GAEHE,EAAa,SAACH,GAClB,IAAMC,EAAU,GAEhB,IADAD,GArGgB,EAsGTA,EAAC,SAtGQ,EAsGU,IACxBC,EAAQC,KAAKF,GACbA,GAxGc,EA0GhB,OAAOC,GAEHG,EAAa,SAACJ,GAClB,IAAKA,EAAI,GA7GO,IA6Gc,EAC5B,MAAO,GAKT,IAHA,IAAMC,EAAU,GACVI,EAjHU,EAiHJC,KAAKC,QAAQP,EAjHT,KAmHTA,EAAIK,GACTJ,EAAQC,KAAKF,KAEf,OAAOC,GAEHO,EAAY,SAACR,GACjB,GAAIA,EAzHY,IAyHQ,EACtB,MAAO,GAIT,IAFA,IAAMC,EAAU,GACVI,EA7HU,EA6HJC,KAAKC,QAAQP,EA7HT,GA8HTA,GAAKK,GACVJ,EAAQC,KAAKF,KAEf,OAAOC,GAGHb,EAAY,WAEhB,IADA,IAAMqB,EAAS,GACNT,EAAI,EAAGA,EAAI,GAAIA,IACC,IAAnBpB,EAAMoB,GAAGpC,OACX6C,EAAOP,KAAKF,GAIhB,GAAIS,EAAOC,OAAS,EAAG,CACrB,IAAMpB,EAAQ,YAAOV,GACf+B,EAAIF,EAAOH,KAAKC,MAAMD,KAAKM,SAAWH,EAAOC,SACnDpB,EAASqB,GAAG/C,MAAQ0C,KAAKM,SAAW,IAAO,EAAI,EAC/CtB,EAASqB,GAAG5D,MAAQ,EAEpB8B,EAASS,KAGPuB,EAAa,SAACC,EAAOC,GACzB,IAAIC,GAAQ,EACRC,GAAW,EA0Bf,GAzBAF,EAAYG,OAAM,SAAClB,GACjB,GAAuB,IAAnBpB,EAAMoB,GAAGpC,MAGX,OADAoD,EAAOhB,GACA,EACF,GACLpB,EAAMoB,GAAGpC,QAAUgB,EAAMkC,GAAOlD,OACb,IAAnBgB,EAAMoB,GAAGjD,MACT,CAEA,IAAMuC,EAAQ,YAAOV,GAUrB,OATAU,EAASU,GAAGpC,MAA4B,EAApB0B,EAASU,GAAGpC,MAEhCO,EAA6B,EAApBmB,EAASU,GAAGpC,OAErB0B,EAASU,GAAGjD,MAAQ,EACpBuC,EAASwB,GAAOlD,MAAQ,EACxB0B,EAASwB,GAAO/D,MAAQ,EACxB8B,EAASS,GACT2B,GAAW,GACJ,EAEP,OAAO,MAGNA,GAAYD,GAAQ,GAAKA,EAAI,SAjLlB,EAiLoC,GAAG,CACrD,IAAM1B,EAAQ,YAAOV,GAMrB,OALAU,EAAS0B,GAAMpD,MAAQ0B,EAASwB,GAAOlD,MACvC0B,EAAS0B,GAAMjE,MAAQ,EACvBuC,EAASwB,GAAOlD,MAAQ,EACxB0B,EAASwB,GAAO/D,MAAQ,EACxB8B,EAASS,IACF,EAET,OAAO2B,GAGHvB,EAAS,WAGb,IAFA,IAAIL,GAAY,EAEPW,EAAI,EAAGA,EAhMA,EAgMiBA,IAC/B,IAAK,IAAImB,EAAI,EAAGA,EAjMF,EAiMmBA,IAAK,CACpC,IAAIC,EAlMQ,EAkMJpB,EAAkBmB,EACH,IAAnBvC,EAAMwC,GAAGxD,OACPiD,EAAWO,EAAGrB,EAAWqB,MAC3B/B,GAAY,GAKpB,OAAOA,GAGHM,EAAW,WAEf,IADA,IACSK,EAAIqB,EAAiBrB,GAAK,EAAGA,IACpC,IAAK,IAAImB,EAAI,EAAGA,EAhNF,EAgNmBA,IAAK,CACpC,IAAIC,EAjNQ,EAiNJpB,EAAkBmB,EACH,IAAnBvC,EAAMwC,GAAGxD,OACPiD,EAAWO,EAAGjB,EAAWiB,MACf,EAKN,YAAOxC,IAGjBiB,EAAY,WAEhB,IADA,IAAIR,GAAY,EACPW,EAAI,EAAGA,EA9NA,EA8NiBA,IAC/B,IAAK,IAAImB,EAAIE,EAAiBF,GAAK,EAAGA,IAAK,CACzC,IAAIC,EAhOQ,EAgOJpB,EAAkBmB,EACH,IAAnBvC,EAAMwC,GAAGxD,OACPiD,EAAWO,EAAGhB,EAAWgB,MAC3B/B,GAAY,GAKpB,OAAOA,GAEHO,EAAW,WAEf,IADA,IAAIP,GAAY,EACPW,EAAI,EAAGA,EA5OA,EA4OiBA,IAC/B,IAAK,IAAImB,EAAI,EAAGA,EA7OF,EA6OmBA,IAAK,CACpC,IAAIC,EA9OQ,EA8OJpB,EAAkBmB,EACH,IAAnBvC,EAAMwC,GAAGxD,OAEPiD,EAAWO,EAAGZ,EAAUY,MAC1B/B,GAAY,GAKpB,OAAOA,GAEHS,EAAgB,WAEpB,GADelB,EAAM0C,QAAO,SAACC,GAAD,OAAmB,IAAZA,EAAE3D,SAC1B8C,QAAU,EAAG,CAGtB,IAAK,IAAIV,EAAI,EAAGA,EA9PF,EA8PmBA,IAG/B,IAFA,IAAIwB,EAAU5C,EA/PF,EA+PQoB,GAAiBpC,MACjC6D,EAAU7C,EAAMoB,GAAGpC,MACduD,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAIC,EAlQM,EAkQFpB,EAAkBmB,EACtBO,EAAI1B,EAnQE,EAmQgBmB,EAC1B,GAAIK,IAAY5C,EAAMwC,GAAGxD,MACvB,OAAO,EAET,GAAI6D,IAAY7C,EAAM8C,GAAG9D,MACvB,OAAO,EAET4D,EAAU5C,EAAMwC,GAAGxD,MACnB6D,EAAU7C,EAAM8C,GAAG9D,MAGvB,OAAO,EAET,OAAO,GAGT,OACE,eAAC,WAAD,WACE,qBAAKC,UAAU,kBAAf,SACGe,EAAM+C,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAmBjE,MAAOiE,GAAdA,EAAE9D,UAGjBU,GAAY,cAAC,EAAD,CAAUR,UApPT,WAEhB,IADA,IAAMsB,EAAQ,YAAOV,GACZoB,EAAI,EAAGA,EAAI,GAAIA,IACtBV,EAASU,GAAGpC,MAAQ,EACpB0B,EAASU,GAAGjD,MAAQ,EAEtBuB,IACAc,IACAA,IAEAX,GAAY,YE5BDoD,G,MAtBO,WAEpB,IADA,IAAMC,EAAM,GACH9B,EAAI,EAAGA,EAAI,EAAGA,IACrB8B,EAAI5B,KAAK,qBAAKrC,UAAU,YAAgBmC,IAG1C,IADA,IAAM+B,EAAU,GACP/B,EAAI,EAAGA,EAAI,EAAGA,IACrB+B,EAAQ7B,KACN,qBAAKrC,UAAU,MAAf,SACGiE,GADuB9B,IAM9B,OACE,sBAAKnC,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBkE,IACvB,cAAC,EAAD,SCYS7D,G,MAAAA,aALS,SAACnB,GAAD,MAAY,CAClCH,MAAOG,EAAMH,MAAMA,MACnBC,KAAME,EAAMH,MAAMC,QAGoB,GAAzBqB,EA9BA,SAAC,GAAqB,IAAnBtB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvB,OACE,sBAAKgB,UAAU,mBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,QAAf,oBAGF,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,mBACA,qBAAKA,UAAU,eAAf,SAA+BjB,OAEjC,sBAAKiB,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,kBACA,qBAAKA,UAAU,eAAf,SAA+BhB,iB,MCA1BmF,MAXf,WACE,OACE,cAAC,IAAD,CAAU3E,MAAOA,EAAjB,SACE,sBAAKQ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCFOoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.79bab0a8.chunk.js","sourcesContent":["export const ADD_SCORE = \"ADD_SCORE\";\r\nexport const RESET_SCORE = \"RESET_SCORE\";\r\n","import { ADD_SCORE, RESET_SCORE } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  score: 0,\r\n  best: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ADD_SCORE:\r\n      return { ...state, score: state.score + payload };\r\n    case RESET_SCORE:\r\n      if (state.score > state.best) {\r\n        return { ...state, best: state.score, score: 0 };\r\n      }\r\n      return { ...state, score: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport score from \"./score\";\r\n\r\nexport default combineReducers({ score });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport \"./Piece.css\";\r\n\r\nconst Piece = ({ piece }) => {\r\n  return (\r\n    <Fragment>\r\n      {piece.value > 0 && (\r\n        <div\r\n          className={`piece piece-state-${piece.state} tile-${piece.value} loc-${piece.pos}`}\r\n        >\r\n          <div className={\"piece-number\"}>{piece.value}</div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Piece;\r\n","import React from \"react\";\r\n\r\nimport \"./GameOver.css\";\r\n\r\nconst GameOver = ({ onRestart }) => {\r\n  return (\r\n    <div className=\"msg-container\">\r\n      <div className=\"game-over\">Game over!</div>\r\n      <a\r\n        className=\"retry-btn\"\r\n        onClick={() => {\r\n          onRestart();\r\n        }}\r\n      >\r\n        Try Again\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addScore, resetScore } from \"../../actions/score\";\r\n//components\r\nimport Piece from \"../Piece/Piece\";\r\nimport GameOver from \"../GameOver/GameOver\";\r\n\r\nconst SIDE_LENGTH = 4;\r\n\r\nconst PiecesContainer = ({ addScore, resetScore }) => {\r\n  //const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [board, setBoard] = useState([\r\n    { value: 0, state: 0, pos: 0 },\r\n    { value: 0, state: 0, pos: 1 },\r\n    { value: 0, state: 0, pos: 2 },\r\n    { value: 0, state: 0, pos: 3 },\r\n    { value: 0, state: 0, pos: 4 },\r\n    { value: 0, state: 0, pos: 5 },\r\n    { value: 0, state: 0, pos: 6 },\r\n    { value: 0, state: 0, pos: 7 },\r\n    { value: 0, state: 0, pos: 8 },\r\n    { value: 0, state: 0, pos: 9 },\r\n    { value: 0, state: 0, pos: 10 },\r\n    { value: 0, state: 0, pos: 11 },\r\n    { value: 0, state: 0, pos: 12 },\r\n    { value: 0, state: 0, pos: 13 },\r\n    { value: 0, state: 0, pos: 14 },\r\n    { value: 0, state: 0, pos: 15 },\r\n  ]);\r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        if (!event.repeat) {\r\n          doMove(event);\r\n        }\r\n      },\r\n      false\r\n    );\r\n    dropPiece();\r\n    dropPiece();\r\n  }, []);\r\n\r\n  const onRestart = () => {\r\n    const newBoard = [...board];\r\n    for (let i = 0; i < 16; i++) {\r\n      newBoard[i].value = 0;\r\n      newBoard[i].state = 0;\r\n    }\r\n    resetScore();\r\n    dropPiece();\r\n    dropPiece();\r\n\r\n    setGameOver(false);\r\n  };\r\n\r\n  const doMove = (event) => {\r\n    let validMove = false;\r\n    if (!loading) {\r\n      const newBoard = [...board];\r\n      newBoard.forEach((ele) => (ele.state = 0));\r\n      setBoard(newBoard);\r\n\r\n      setLoading(true);\r\n      switch (event.key) {\r\n        case \"w\":\r\n          //console.log(\"You swiped up!\");\r\n          validMove = moveUp();\r\n          break;\r\n        case \"s\":\r\n          //console.log(\"You swiped Down!\");\r\n          validMove = moveDown();\r\n          break;\r\n        case \"a\":\r\n          //console.log(\"You swiped Left!\");\r\n          validMove = moveLeft();\r\n          break;\r\n        case \"d\":\r\n          //console.log(\"You swiped Right!\");\r\n          validMove = moveRight();\r\n          break;\r\n        default:\r\n      }\r\n      if (validMove) {\r\n        dropPiece();\r\n        if (checkGameOver()) {\r\n          setGameOver(true);\r\n          return;\r\n        }\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //game logic\r\n  const indexAbove = (i) => {\r\n    const indexes = [];\r\n    i = i - SIDE_LENGTH;\r\n    while (i >= 0) {\r\n      indexes.push(i);\r\n      i = i - SIDE_LENGTH;\r\n    }\r\n    return indexes;\r\n  };\r\n  const indexBelow = (i) => {\r\n    const indexes = [];\r\n    i = i + SIDE_LENGTH;\r\n    while (i < SIDE_LENGTH ** 2) {\r\n      indexes.push(i);\r\n      i = i + SIDE_LENGTH;\r\n    }\r\n    return indexes;\r\n  };\r\n  const indexRight = (i) => {\r\n    if ((i + 1) % SIDE_LENGTH === 0) {\r\n      return [];\r\n    }\r\n    const indexes = [];\r\n    const lim = Math.floor(++i / SIDE_LENGTH) * SIDE_LENGTH + SIDE_LENGTH;\r\n\r\n    while (i < lim) {\r\n      indexes.push(i++);\r\n    }\r\n    return indexes;\r\n  };\r\n  const indexLeft = (i) => {\r\n    if (i % SIDE_LENGTH === 0) {\r\n      return [];\r\n    }\r\n    const indexes = [];\r\n    const lim = Math.floor(--i / SIDE_LENGTH) * SIDE_LENGTH;\r\n    while (i >= lim) {\r\n      indexes.push(i--);\r\n    }\r\n    return indexes;\r\n  };\r\n\r\n  const dropPiece = () => {\r\n    const spaces = [];\r\n    for (let i = 0; i < 16; i++) {\r\n      if (board[i].value === 0) {\r\n        spaces.push(i);\r\n      }\r\n    }\r\n    //update board\r\n    if (spaces.length > 0) {\r\n      const newBoard = [...board];\r\n      const r = spaces[Math.floor(Math.random() * spaces.length)];\r\n      newBoard[r].value = Math.random() < 0.15 ? 4 : 2;\r\n      newBoard[r].state = 2;\r\n\r\n      setBoard(newBoard);\r\n    }\r\n  };\r\n  const moveSingle = (start, destIndexes) => {\r\n    let spot = -1;\r\n    let combined = false;\r\n    destIndexes.every((i) => {\r\n      if (board[i].value === 0) {\r\n        // move to spot\r\n        spot = i;\r\n        return true;\r\n      } else if (\r\n        board[i].value === board[start].value &&\r\n        board[i].state === 0\r\n      ) {\r\n        // combine\r\n        const newBoard = [...board];\r\n        newBoard[i].value = newBoard[i].value * 2;\r\n        // redux add score\r\n        addScore(newBoard[i].value * 2);\r\n\r\n        newBoard[i].state = 1;\r\n        newBoard[start].value = 0;\r\n        newBoard[start].state = 0;\r\n        setBoard(newBoard);\r\n        combined = true;\r\n        return false;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    if (!combined && spot >= 0 && spot < SIDE_LENGTH ** 2) {\r\n      const newBoard = [...board];\r\n      newBoard[spot].value = newBoard[start].value;\r\n      newBoard[spot].state = 0;\r\n      newBoard[start].value = 0;\r\n      newBoard[start].state = 0;\r\n      setBoard(newBoard);\r\n      return true;\r\n    }\r\n    return combined;\r\n  };\r\n\r\n  const moveUp = () => {\r\n    let validMove = false;\r\n    // for each row\r\n    for (let i = 1; i < SIDE_LENGTH; i++) {\r\n      for (let j = 0; j < SIDE_LENGTH; j++) {\r\n        let z = i * SIDE_LENGTH + j;\r\n        if (board[z].value !== 0) {\r\n          if (moveSingle(z, indexAbove(z))) {\r\n            validMove = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return validMove;\r\n  };\r\n\r\n  const moveDown = () => {\r\n    let validMove = false;\r\n    for (let i = SIDE_LENGTH - 2; i >= 0; i--) {\r\n      for (let j = 0; j < SIDE_LENGTH; j++) {\r\n        let z = i * SIDE_LENGTH + j;\r\n        if (board[z].value !== 0) {\r\n          if (moveSingle(z, indexBelow(z))) {\r\n            validMove = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const newBoard = [...board];\r\n  };\r\n\r\n  const moveRight = () => {\r\n    let validMove = false;\r\n    for (let i = 0; i < SIDE_LENGTH; i++) {\r\n      for (let j = SIDE_LENGTH - 2; j >= 0; j--) {\r\n        let z = i * SIDE_LENGTH + j;\r\n        if (board[z].value !== 0) {\r\n          if (moveSingle(z, indexRight(z))) {\r\n            validMove = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return validMove;\r\n  };\r\n  const moveLeft = () => {\r\n    let validMove = false;\r\n    for (let i = 0; i < SIDE_LENGTH; i++) {\r\n      for (let j = 1; j < SIDE_LENGTH; j++) {\r\n        let z = i * SIDE_LENGTH + j;\r\n        if (board[z].value !== 0) {\r\n          //console.log(\"--\" + z + \"--\");\r\n          if (moveSingle(z, indexLeft(z))) {\r\n            validMove = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return validMove;\r\n  };\r\n  const checkGameOver = () => {\r\n    const zeroes = board.filter((x) => x.value === 0);\r\n    if (zeroes.length <= 0) {\r\n      // check for valid moves\r\n      // check rows\r\n      for (let i = 0; i < SIDE_LENGTH; i++) {\r\n        let prevCol = board[i * SIDE_LENGTH].value;\r\n        let prevRow = board[i].value;\r\n        for (let j = 1; j <= 3; j++) {\r\n          let z = i * SIDE_LENGTH + j;\r\n          let y = i + SIDE_LENGTH * j;\r\n          if (prevCol === board[z].value) {\r\n            return false;\r\n          }\r\n          if (prevRow === board[y].value) {\r\n            return false;\r\n          }\r\n          prevCol = board[z].value;\r\n          prevRow = board[y].value;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  //render\r\n  return (\r\n    <Fragment>\r\n      <div className=\"piece-container\">\r\n        {board.map((e) => (\r\n          <Piece key={e.pos} piece={e} />\r\n        ))}\r\n      </div>\r\n      {gameOver && <GameOver onRestart={onRestart} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPiecesContainer.propTypes = {\r\n  addScore: PropTypes.func.isRequired,\r\n  resetScore: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { addScore, resetScore })(PiecesContainer);\r\n","import { ADD_SCORE, RESET_SCORE } from \"../actions/constants\";\r\n\r\nexport const addScore = (amount) => (dispatch) => {\r\n  dispatch({ type: ADD_SCORE, payload: amount });\r\n};\r\n\r\nexport const resetScore = () => (dispatch) => {\r\n  dispatch({ type: RESET_SCORE });\r\n};\r\n","import React from \"react\";\r\n\r\n//components\r\nimport PiecesContainer from \"../PiecesContainer/PiecesContainer\";\r\n\r\nimport \"./GameContainer.css\";\r\n\r\nconst GameContainer = () => {\r\n  const row = [];\r\n  for (let i = 0; i < 4; i++) {\r\n    row.push(<div className=\"row-item\" key={i} />);\r\n  }\r\n  const allRows = [];\r\n  for (let i = 0; i < 4; i++) {\r\n    allRows.push(\r\n      <div className=\"row\" key={i}>\r\n        {row}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"grid\">{allRows}</div>\r\n      <PiecesContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameContainer;\r\n","// redux\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ score, best }) => {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div className=\"title-container\">\r\n        <div className=\"title\">2048</div>\r\n      </div>\r\n\r\n      <div className=\"score-container\">\r\n        <div className=\"score\">\r\n          <div className=\"score-label\">SCORE</div>\r\n          <div className=\"score-number\">{score}</div>\r\n        </div>\r\n        <div className=\"score\">\r\n          <div className=\"score-label\">BEST</div>\r\n          <div className=\"score-number\">{best}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n  best: PropTypes.number.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  score: state.score.score,\r\n  best: state.score.best,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Header);\r\n","// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n//components\nimport GameContainer from \"./components/GameContainer/GameContainer\";\nimport Header from \"./components/Header/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header />\n        <GameContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}